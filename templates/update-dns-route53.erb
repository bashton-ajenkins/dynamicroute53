#!/bin/sh
set -euo pipefail

# Script generated by Puppet!

# This script will either:
# 1) Create an A record in Route53 with the machines local IP or
# 2) Create a CNAME record in Route53 with the machines public hostname
# Either are dependent upon the setting that were defined in Puppet.

# Make sure only root can run our script
if [ "$(id -u)" != "0" ]; then
  echo "This script must be run as root" 1>&2
  exit 1
fi

# Get our Instance ID, local IP, and EC2 Public Hostname using cloud-utils ec2metadata
INSTANCE_ID=$(curl http://169.254.169.254/latest/meta-data/instance-id)
IPV4_ADDRESS=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
PUBLIC_HOSTNAME=$(curl http://169.254.169.254/latest/meta-data/public-hostname)

# Set required variables for Route53 API Call
HOSTED_ZONE_ID=<%= scope.lookupvar('dynamicroute53::hosted_zone_id') %>
DOMAIN=<%= scope.lookupvar('dynamicroute53::domain') %>
TTL=<%= scope.lookupvar('dynamicroute53::ttl') %>
REGION=<%= scope.lookupvar('dynamicroute53::region') %>
HOSTNAME=<%= scope.lookupvar('dynamicroute53::hostname') %>

# Begin changes
##############################################################


# Check if there is already a record for our entry and it doesn't match ours - delete it!
# This is here because otherwise we can't put in our record.
# TODO: This only checks for existing private DNS entries - not public.
# TODO: I believe list-resource-record-sets would need to be paginated if there were enough entries, which this does't support (yet).
<% if scope.lookupvar('dynamicroute53::private_dns') %>
ROUTE53_IP=$(/usr/bin/aws route53 list-resource-record-sets --hosted-zone-id ${HOSTED_ZONE_ID} | grep -A1 ${HOSTNAME}.${DOMAIN} | awk '{print $2}' | tail -n1)

if [ "${ROUTE53_IP}" != "${IPV4_ADDRESS}" ] && [ -n "${ROUTE53_IP}" ];
then
  /usr/bin/aws route53 change-resource-record-sets --region ${REGION} --hosted-zone-id ${HOSTED_ZONE_ID} \
  --change-batch "{\"Comment\": \"string\",\"Changes\": [{\"Action\": \"DELETE\",\"ResourceRecordSet\": {\"Name\": \"${HOSTNAME}.${DOMAIN}\",\"Type\": \"A\",\"TTL\": ${TTL},\"ResourceRecords\": [{\"Value\": \"${ROUTE53_IP}\"}]}}]}"
fi
<% end %>

<% if scope.lookupvar('dynamicroute53::private_dns') %>
# Set an A record with the local IP
/usr/bin/aws route53 change-resource-record-sets --region ${REGION} --hosted-zone-id ${HOSTED_ZONE_ID} \
  --change-batch "{\"Comment\": \"string\",\"Changes\": [{\"Action\": \"CREATE\",\"ResourceRecordSet\": {\"Name\": \"${HOSTNAME}.${DOMAIN}\",\"Type\": \"A\",\"TTL\": ${TTL},\"ResourceRecords\": [{\"Value\": \"${IPV4_ADDRESS}\"}]}}]}"
<% else %>
# Create an A record with the IP of the public hostname
IPV4_ADDRESS=$(/usr/bin/env python2 -c "import socket, sys; print socket.gethostbyname(sys.argv[1])" "$PUBLIC_HOSTNAME")

/usr/bin/aws route53 change-resource-record-sets --region ${REGION} --hosted-zone-id ${HOSTED_ZONE_ID} \
  --change-batch "{\"Comment\": \"string\",\"Changes\": [{\"Action\": \"CREATE\",\"ResourceRecordSet\": {\"Name\": \"${HOSTNAME}.${DOMAIN}\",\"Type\": \"A\",\"TTL\": ${TTL},\"ResourceRecords\": [{\"Value\": \"${IPV4_ADDRESS}\"}]}}]}"

<% end %>
